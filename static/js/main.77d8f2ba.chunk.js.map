{"version":3,"sources":["Header/Header.jsx","Book/Book.jsx","api/api.js","api/books.js","BooksTable/BooksTable.jsx","Dashboard/Dashboard.jsx","api/category.js","ErrorsPlace/ErrorsPlace.jsx","AddBook/AddBook.jsx","EditBook/EditBook.jsx","App.jsx","index.jsx"],"names":["Header","className","to","exact","Book","book","onBookDeleted","title","author","category","isbn","pathname","state","isEditing","type","onClick","id","BASE_URL","request","url","options","fetch","then","res","json","console","log","getBooks","getBookDelete","bookId","method","addBook","headers","body","JSON","stringify","post","updateCurrentBook","put","BooksTable","useState","books","setBooks","useEffect","removeBook","carrentList","filter","map","Dashboard","getCategories","ErrorsPlace","errors","emptyTitle","emptyAuthor","numberInAuthor","noCategory","emptyISBN","lettersInISBN","lengthISBN","AddBook","categoties","setCategories","errorVisible","setErrorVisible","ISBN","newBook","setNewBook","history","useHistory","data","selectedCategoryId","categoryId","getCategory","name","useMemo","newErrors","match","length","handleChange","event","preventDefault","target","value","current","countError","count","key","addNewBook","redirect","replace","onSubmit","placeholder","onChange","hidden","selected","EditBook","location","useLocation","setTitle","setAuthor","setCategory","setISBN","saveBook","formData","updatedBook","copy","index","findIndex","splice","updateBook","push","required","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77d8f2ba.chunk.js","sourcesContent":["import React from 'react';\n\n// import 'bulma';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"navbar-item is-tab\"\n    >\n      Dashboard\n    </NavLink>\n    <NavLink to=\"/addbook\" className=\"navbar-item is-tab\">\n      Add a Book\n    </NavLink>\n  </nav>\n);\n","import PropTypes from 'prop-types';\nimport {  Link } from 'react-router-dom';\n\nimport 'bulma';\nimport './Book.scss';\n\nexport const Book = ({ book, onBookDeleted }) => {\n\n  return <tr className=\"Book\" key={book.id}>\n    <td>{book.title}</td>\n    <td>{book.author}</td>\n    <td>{book.category}</td>\n    <td>{book.isbn}</td>\n    <td>\n      <Link \n        className=\"Book__button button button--edit\"\n        to={{\n          pathname: \"/editbook/:book.id\",\n          state: {\n            book,\n            isEditing: true,\n          },\n        }}\n      > \n        EDIT\n      </Link>\n      <button\n        type=\"button\"\n        className=\"Book__button button button--delete\"\n        onClick ={() => {\n          onBookDeleted(book.id)\n        }}\n      >\n        DELETE\n      </button>\n    </td>\n  </tr>\n\n}\n\n          \n  \n\nBook.propTypes = {\n  book: PropTypes.arrayOf().isRequired,\n};\n"," const BASE_URL = 'https://books-data-base.herokuapp.com';\n\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json());\n\n  console.log(fetch(`${BASE_URL}/books`)\n)\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const post = (url, book) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(book),\n});\n\nexport const put = (url, {title, author, category, isbn}) => request(url, {\n  method: 'PUT',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({title, author, category, isbn}),\n});\n","import { request, remove, post, put } from './api';\n\nexport const getBooks = () => request(`/books`);\n\nexport const getBookDelete = bookId => remove(`/books/${bookId}`);\n\nexport function addBook(book) {\n  return post(`/books`, book);\n}\n\nexport const updateCurrentBook= ({ id, title, author, category, isbn }) => put(`/books/${id}`, {title, author, category, isbn})\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Book } from '../Book';\n\nimport { getBooks, getBookDelete } from '../api/books';\n\nimport 'bulma';\n\nimport './BooksTable.scss';\n\nexport const BooksTable = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    getBooks()\n      .then(res => setBooks(res));\n  }, [books]);\n\n  const removeBook = (bookId) => {\n    getBookDelete(bookId)\n    .then(() => {\n      setBooks(carrentList => (\n        carrentList.filter(books => books.id !== bookId)\n      ))\n    })\n  }\n\n  return (\n    <>\n        <table className=\"BooksTable table  is-striped is-narrow is-hoverable\">\n        <thead>\n          <th className=\"BooksTable__title\">Title</th>\n          <th className=\"BooksTable__title\">Author</th>\n          <th className=\"BooksTable__title\">Category</th>\n          <th className=\"BooksTable__title\">ISBN</th>\n          <th className=\"BooksTable__title\">Action</th>\n        </thead>\n        <tbody>\n          {books.map(book => <Book book={book} books={books} onBookDeleted={removeBook}  /> )}\n        </tbody>\n      </table>\n    </>\n    \n  );\n};\n\nBooksTable.propTypes = {\n  people: PropTypes.arrayOf().isRequired,\n};\n","import React from 'react';\n\nimport { BooksTable } from '../BooksTable'\n\nexport const Dashboard = () =>\n  <>\n    <h1 className=\"title\">Books List</h1>\n    <BooksTable />\n  </>\n\n\n","import { request } from './api';\n\nexport const getCategories = () => request(`/categories`);\n\nexport const getCategory = (categoryId) => request(`/categories/${categoryId}`);\n","import React from 'react';\n\nimport 'bulma';\nimport './ErrorsPlace.scss';\n\nexport const ErrorsPlace = ({ errors }) => {\n\n  return (\n    <div className=\"ErrorsPlace\">\n      <p>\n        {errors.emptyTitle}\n      </p>\n      <p>\n        {errors.emptyAuthor}\n      </p>\n      <p>\n        {errors.numberInAuthor}\n      </p>\n      <p>\n        {errors.noCategory}\n      </p>\n      <p>\n        {errors.emptyISBN}\n      </p>\n      <p>\n        {errors.lettersInISBN}\n      </p>\n      <p>\n        {errors.lengthISBN}\n      </p>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bulma';\nimport './AddBook.scss';\n\nimport { getCategories, getCategory } from '../api/category'\nimport { addBook } from '../api/books'\nimport { ErrorsPlace } from '../ErrorsPlace'\n\nexport const AddBook = () => {\n\n  const [categoties, setCategories] = useState([]);\n  const [errorVisible, setErrorVisible] = useState(false)\n  const [newBook, setNewBook] = useState({\n    title: '',\n    author: '',\n    category: '',\n    ISBN: '',\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getCategories()\n      .then(data => setCategories(data))\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setErrorVisible(true);\n    if (countError() === 0) {\n\n      addNewBook({ ...newBook });\n\n    }\n\n  }\n\n  const selectedCategoryId = (categoryId) => {\n    if (categoryId !== 0) {\n      getCategory(categoryId)\n        .then(data => setNewBook(({ ...newBook, category: data.name })));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {\n      emptyTitle: '',\n      emptyAuthor: '',\n      numberInAuthor: '',\n      noCategory: '',\n      emptyISBN: '',\n      lettersInISBN: '',\n      lengthISBN: '',\n    };\n\n    for (let name in newBook) {\n      switch (name) {\n        case 'title': newErrors.emptyTitle = newBook[name] === '' ? `The book title field cannot be blank` : '';\n          break;\n        case 'author':\n          newErrors.emptyAuthor = newBook[name] === '' ? `The book author field cannot be blank` : '';\n          newErrors.numberInAuthor = newBook[name].match(/\\d+/g) ? `The book author cannot contain numbers` : '';\n          break;\n        case 'category':\n          newErrors.noCategory = newBook[name] === '' ? `Select book category` : '';\n          break;\n        case 'ISBN':\n          newErrors.emptyISBN = newBook[name] === '' ? `The book ISBN field cannot be blank` : '';\n          newErrors.lettersInISBN = newBook[name].match(/[a-zA-Z]/g) ? `The book ISBN cannot contain letters` : '';\n          newErrors.lengthISBN = newBook[name].length === 13 ? '' : `The book ISBN field must contain 13 digits`;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return newErrors;\n  }\n\n  const errors = useMemo(validateForm, [newBook]);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setNewBook((current) => ({ ...current, [name]: value }));\n  }\n\n  const countError = () => {\n    let count = 0;\n    for (const key in errors) {\n      if (errors[key].length > 0) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n\n  const addNewBook = ({ title, author, category, ISBN: isbn }) => {\n    const createBook = {\n      title,\n      author,\n      category,\n      isbn,\n    };\n\n    addBook(createBook);\n    redirect();\n  };\n\n  const redirect = () => history.replace('/')\n\n  return (\n    <div className=\"AddBook\">\n      <form\n        className=\"AddBook__form \"\n        onSubmit={onSubmit}\n      >\n        <input\n          className=\"input is-small field is-grouped-centered\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title of book\"\n          value={newBook.title}\n          onChange={handleChange}\n        />\n        <input\n          className=\"input is-small field\"\n          name=\"author\"\n          type=\"text\"\n          placeholder=\"Author of book\"\n          value={newBook.author}\n          onChange={handleChange}\n        />\n        <select\n          name=\"category\"\n          id=\"category\"\n          className=\"AddBook__select select is-small field\"\n          onChange={event => selectedCategoryId(+event.target.value)}\n\n        >\n          <option\n            value=\"0\"\n            hidden\n            selected\n          >\n            Select category of book\n          </option>\n          {categoties.map(category => (\n            <option\n              value={category.id}\n              key={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          className=\"input is-small field\"\n          name=\"ISBN\"\n          type=\"text\"\n          placeholder=\"ISBN of book\"\n          value={newBook.ISBN}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"AddBook__button button\"\n        >\n          Add book\n        </button>\n      </form>\n      <div className=\"AddBook__errors errors\">\n        {errorVisible && <ErrorsPlace errors={errors} />}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n\nimport 'bulma';\nimport './EditBook.scss';\n\nimport { getCategories } from '../api/category'\nimport { updateCurrentBook, getBooks } from '../api/books'\n\nexport const EditBook = () => {\n  const location = useLocation();\n  console.log(location.state);\n  const { book } = location.state;\n  const [categoties, setCategories] = useState([]);\n  const [title, setTitle] = useState(book ? book.title : '');\n  const [author, setAuthor] = useState(book ? book.author : '');\n  const [category, setCategory] = useState(book ? book.category : '');\n  const [isbn, setISBN] = useState(book ? book.isbn : '');\n  const [books, setBooks] = useState([]);\n\n\n  const onTitleChange = event => setTitle(event.target.value);\n  const onAuthorChange = event => setAuthor(event.target.value);\n  const onCategoryChange = event => setCategory(event.target.value);\n  const onISBNChange = event => setISBN(event.target.value);\n\n  useEffect(() => {\n    getCategories()\n      .then(data => setCategories(data))\n    getBooks()\n      .then(data => setBooks(data))\n  }, [])\n\n  const history = useHistory();\n\n  const updateBook = (updatedBook) => {\n    const copy = [...books];\n    const index = books.findIndex(book => book.id === updatedBook.id);\n\n    copy.splice(index, 1, updatedBook);\n    setBooks(copy);\n\n    updateCurrentBook(updatedBook);\n  }\n\n  const saveBook = (formData) => {\n    updateBook({ ...book, ...formData });\n  }\n\nconst onSubmit = (event) => {\n    event.preventDefault();\n    saveBook({title, author, category, isbn});\nredirect();\n  }\n\n  const redirect = () => history.push('/')\n\n  return (\n<>\n    <form\n      className=\"AddBook__form\"\n      onSubmit={onSubmit}\n    >\n      <input\n        className=\"input is-small\"\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Title of book\"\n        value={title}\n        onChange={onTitleChange}\n        required\n      />\n      <input\n        className=\"input is-small\"\n        type=\"text\"\n        placeholder=\"Author of book\"\n        value={author}\n        onChange={onAuthorChange}\n        required\n      />\n\n      <select\n        name=\"category\"\n        id=\"category\"\n        className=\" select is-small\"\n        onChange={onCategoryChange}\n        value={category}\n        required\n      >\n        <option\n          value=\"0\"\n        >\n          Select category of book\n        </option>\n        {categoties.map(category => (\n          <option\n            value={category.name}\n            key={category.id}\n          >\n            {category.name}\n          </option>\n        ))}\n      </select>\n\n      <input\n        className=\"input is-small\"\n        name=\"isbn\"\n        type=\"text\"\n        placeholder=\"ISBN of book\"\n        value={isbn}\n        onChange={onISBNChange}\n        required\n      />\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Save\n      </button>\n    </form>\n            {/* {errorVisible && <ErrorsPlace errors={errors} />} */}\n\n</>\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './Header';\nimport { Dashboard } from './Dashboard';\nimport { AddBook } from './AddBook';\nimport { EditBook } from './EditBook';\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/addbook\" component={AddBook}/>\n        <Route path=\"/editbook\" component={EditBook}/>\n        \n        <Redirect path=\"/home\" to=\"/\" />\n      </Switch>\n\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}