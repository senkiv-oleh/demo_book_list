{"version":3,"sources":["Header/Header.jsx","Book/Book.jsx","api/api.js","api/books.js","BooksTable/BooksTable.jsx","Dashboard/Dashboard.jsx","api/category.js","ErrorsPlace/ErrorsPlace.jsx","AddBook/AddBook.jsx","EditBook/EditBook.jsx","App.jsx","index.jsx"],"names":["Header","className","to","exact","Book","book","onBookDeleted","title","author","category","isbn","pathname","state","isEditing","type","onClick","id","request","url","options","fetch","then","res","json","getBooks","getBookDelete","bookId","method","addBook","headers","body","JSON","stringify","post","updateCurrentBook","put","BooksTable","useState","books","setBooks","useEffect","removeBook","carrentList","filter","map","Dashboard","getCategories","ErrorsPlace","errors","emptyTitle","emptyAuthor","numberInAuthor","noCategory","emptyISBN","lettersInISBN","lengthISBN","AddBook","categoties","setCategories","errorVisible","setErrorVisible","ISBN","newBook","setNewBook","history","useHistory","data","selectedCategoryId","categoryId","getCategory","name","useMemo","newErrors","match","length","handleChange","event","preventDefault","target","value","current","countError","count","key","addNewBook","redirect","replace","onSubmit","placeholder","onChange","hidden","selected","EditBook","location","useLocation","console","log","setTitle","setAuthor","setCategory","setISBN","saveBook","formData","updatedBook","copy","index","findIndex","splice","updateBook","push","required","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51f9355f.chunk.js","sourcesContent":["import React from 'react';\n\n// import 'bulma';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"navbar-item is-tab\"\n    >\n      Dashboard\n    </NavLink>\n    <NavLink to=\"/addbook\" className=\"navbar-item is-tab\">\n      Add a Book\n    </NavLink>\n  </nav>\n);\n","import PropTypes from 'prop-types';\nimport {  Link } from 'react-router-dom';\n\nimport 'bulma';\nimport './Book.scss';\n\nexport const Book = ({ book, onBookDeleted }) => {\n\n  return <tr className=\"Book\" key={book.id}>\n    <td>{book.title}</td>\n    <td>{book.author}</td>\n    <td>{book.category}</td>\n    <td>{book.isbn}</td>\n    <td>\n      <Link \n        className=\"Book__button bZutton button--edit\"\n        to={{\n          pathname: \"/editbook/:book.id\",\n          state: {\n            book,\n            isEditing: true,\n          },\n        }}\n      > \n        EDIT\n      </Link>\n      <button\n        type=\"button\"\n        className=\"Book__button button button--delete\"\n        onClick ={() => {\n          onBookDeleted(book.id)\n        }}\n      >\n        DELETE\n      </button>\n    </td>\n  </tr>\n\n}\n\n          \n  \n\nBook.propTypes = {\n  book: PropTypes.arrayOf().isRequired,\n};\n"," const BASE_URL = '../../public/api/manifest.json';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json());\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const post = (url, book) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(book),\n});\n\nexport const put = (url, {title, author, category, isbn}) => request(url, {\n  method: 'PUT',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({title, author, category, isbn}),\n});\n","import { request, remove, post, put } from './api';\n\nexport const getBooks = () => request(`/books`);\n\nexport const getBookDelete = bookId => remove(`/books/${bookId}`);\n\nexport function addBook(book) {\n  return post(`/books`, book);\n}\n\nexport const updateCurrentBook= ({ id, title, author, category, isbn }) => put(`/books/${id}`, {title, author, category, isbn})\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Book } from '../Book';\n\nimport { getBooks, getBookDelete } from '../api/books';\n\nimport 'bulma';\n\nimport './BooksTable.scss';\n\nexport const BooksTable = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    getBooks()\n      .then(res => setBooks(res));\n  }, []);\n\n  const removeBook = (bookId) => {\n    getBookDelete(bookId)\n    .then(() => {\n      setBooks(carrentList => (\n        carrentList.filter(books => books.id !== bookId)\n      ))\n    })\n  }\n\n  return (\n    <>\n        <table className=\"BooksTable table is-fullwidth\">\n        <thead>\n          <th className=\"BooksTable__title\">Title</th>\n          <th className=\"BooksTable__title\">Author</th>\n          <th className=\"BooksTable__title\">Category</th>\n          <th className=\"BooksTable__title\">ISBN</th>\n          <th className=\"BooksTable__title\">Action</th>\n        </thead>\n        <tbody>\n          {books.map(book => <Book book={book} books={books} onBookDeleted={removeBook}  /> )}\n        </tbody>\n      </table>\n    </>\n    \n  );\n};\n\nBooksTable.propTypes = {\n  people: PropTypes.arrayOf().isRequired,\n};\n","import React from 'react';\n\nimport { BooksTable } from '../BooksTable'\n\nexport const Dashboard = () =>\n  <>\n    <h1 className=\"title\">Books List</h1>\n    <BooksTable />\n  </>\n\n\n","import { request } from './api';\n\nexport const getCategories = () => request(`/categories`);\n\nexport const getCategory = (categoryId) => request(`/categories/${categoryId}`);\n","import React from 'react';\n\nimport 'bulma';\nimport './ErrorsPlace.scss';\n\nexport const ErrorsPlace = ({ errors }) => {\n\n  return (\n    <div className=\"ErrorsPlace\">\n      <p>\n        {errors.emptyTitle}\n      </p>\n      <p>\n        {errors.emptyAuthor}\n      </p>\n      <p>\n        {errors.numberInAuthor}\n      </p>\n      <p>\n        {errors.noCategory}\n      </p>\n      <p>\n        {errors.emptyISBN}\n      </p>\n      <p>\n        {errors.lettersInISBN}\n      </p>\n      <p>\n        {errors.lengthISBN}\n      </p>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bulma';\nimport './AddBook.scss';\n\nimport { getCategories, getCategory } from '../api/category'\nimport { addBook } from '../api/books'\nimport { ErrorsPlace } from '../ErrorsPlace'\n\nexport const AddBook = () => {\n\n  const [categoties, setCategories] = useState([]);\n  const [errorVisible, setErrorVisible] = useState(false)\n  const [newBook, setNewBook] = useState({\n    title: '',\n    author: '',\n    category: '',\n    ISBN: '',\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getCategories()\n      .then(data => setCategories(data))\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setErrorVisible(true);\n    if (countError() === 0) {\n\n      addNewBook({ ...newBook });\n\n    }\n\n  }\n\n  const selectedCategoryId = (categoryId) => {\n    if (categoryId !== 0) {\n      getCategory(categoryId)\n        .then(data => setNewBook(({ ...newBook, category: data.name })));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {\n      emptyTitle: '',\n      emptyAuthor: '',\n      numberInAuthor: '',\n      noCategory: '',\n      emptyISBN: '',\n      lettersInISBN: '',\n      lengthISBN: '',\n    };\n\n    for (let name in newBook) {\n      switch (name) {\n        case 'title': newErrors.emptyTitle = newBook[name] === '' ? `The book title field cannot be blank` : '';\n          break;\n        case 'author':\n          newErrors.emptyAuthor = newBook[name] === '' ? `The book author field cannot be blank` : '';\n          newErrors.numberInAuthor = newBook[name].match(/\\d+/g) ? `The book author cannot contain numbers` : '';\n          break;\n        case 'category':\n          newErrors.noCategory = newBook[name] === '' ? `Select book category` : '';\n          break;\n        case 'ISBN':\n          newErrors.emptyISBN = newBook[name] === '' ? `The book ISBN field cannot be blank` : '';\n          newErrors.lettersInISBN = newBook[name].match(/[a-zA-Z]/g) ? `The book ISBN cannot contain letters` : '';\n          newErrors.lengthISBN = newBook[name].length === 13 ? '' : `The book ISBN field must contain 13 digits`;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return newErrors;\n  }\n\n  const errors = useMemo(validateForm, [newBook]);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setNewBook((current) => ({ ...current, [name]: value }));\n  }\n\n  const countError = () => {\n    let count = 0;\n    for (const key in errors) {\n      if (errors[key].length > 0) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n\n  const addNewBook = ({ title, author, category, ISBN: isbn }) => {\n    const createBook = {\n      title,\n      author,\n      category,\n      isbn,\n    };\n\n    addBook(createBook);\n    redirect();\n  };\n\n  const redirect = () => history.replace('/')\n\n  return (\n    <div className=\"AddBook\">\n      <form\n        className=\"AddBook__form \"\n        onSubmit={onSubmit}\n      >\n        <input\n          className=\"input is-small field is-grouped-centered\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title of book\"\n          value={newBook.title}\n          onChange={handleChange}\n        />\n        <input\n          className=\"input is-small field\"\n          name=\"author\"\n          type=\"text\"\n          placeholder=\"Author of book\"\n          value={newBook.author}\n          onChange={handleChange}\n        />\n        <select\n          name=\"category\"\n          id=\"category\"\n          className=\"AddBook__select select is-small field\"\n          onChange={event => selectedCategoryId(+event.target.value)}\n\n        >\n          <option\n            value=\"0\"\n            hidden\n            selected\n          >\n            Select category of book\n          </option>\n          {categoties.map(category => (\n            <option\n              value={category.id}\n              key={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          className=\"input is-small field\"\n          name=\"ISBN\"\n          type=\"text\"\n          placeholder=\"ISBN of book\"\n          value={newBook.ISBN}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"AddBook__button button\"\n        >\n          Add book\n        </button>\n      </form>\n      <div className=\"AddBook__errors errors\">\n        {errorVisible && <ErrorsPlace errors={errors} />}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n\nimport 'bulma';\nimport './EditBook.scss';\n\nimport { getCategories } from '../api/category'\nimport { updateCurrentBook, getBooks } from '../api/books'\n\nexport const EditBook = () => {\n  const location = useLocation();\n  console.log(location.state);\n  const { book } = location.state;\n  const [categoties, setCategories] = useState([]);\n  const [title, setTitle] = useState(book ? book.title : '');\n  const [author, setAuthor] = useState(book ? book.author : '');\n  const [category, setCategory] = useState(book ? book.category : '');\n  const [isbn, setISBN] = useState(book ? book.isbn : '');\n  const [books, setBooks] = useState([]);\n\n\n  const onTitleChange = event => setTitle(event.target.value);\n  const onAuthorChange = event => setAuthor(event.target.value);\n  const onCategoryChange = event => setCategory(event.target.value);\n  const onISBNChange = event => setISBN(event.target.value);\n\n  useEffect(() => {\n    getCategories()\n      .then(data => setCategories(data))\n    getBooks()\n      .then(data => setBooks(data))\n  }, [])\n\n  const history = useHistory();\n\n  const updateBook = (updatedBook) => {\n    const copy = [...books];\n    const index = books.findIndex(book => book.id === updatedBook.id);\n\n    copy.splice(index, 1, updatedBook);\n    setBooks(copy);\n\n    updateCurrentBook(updatedBook);\n  }\n\n  const saveBook = (formData) => {\n    updateBook({ ...book, ...formData });\n  }\n\nconst onSubmit = (event) => {\n    event.preventDefault();\n    saveBook({title, author, category, isbn});\nredirect();\n  }\n\n  const redirect = () => history.push('/')\n\n  return (\n<>\n    <form\n      className=\"AddBook__form\"\n      onSubmit={onSubmit}\n    >\n      <input\n        className=\"input is-small\"\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Title of book\"\n        value={title}\n        onChange={onTitleChange}\n        required\n      />\n      <input\n        className=\"input is-small\"\n        type=\"text\"\n        placeholder=\"Author of book\"\n        value={author}\n        onChange={onAuthorChange}\n        required\n      />\n\n      <select\n        name=\"category\"\n        id=\"category\"\n        className=\" select is-small\"\n        onChange={onCategoryChange}\n        value={category}\n        required\n      >\n        <option\n          value=\"0\"\n        >\n          Select category of book\n        </option>\n        {categoties.map(category => (\n          <option\n            value={category.name}\n            key={category.id}\n          >\n            {category.name}\n          </option>\n        ))}\n      </select>\n\n      <input\n        className=\"input is-small\"\n        name=\"isbn\"\n        type=\"text\"\n        placeholder=\"ISBN of book\"\n        value={isbn}\n        onChange={onISBNChange}\n        required\n      />\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Save\n      </button>\n    </form>\n            {/* {errorVisible && <ErrorsPlace errors={errors} />} */}\n\n</>\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './Header';\nimport { Dashboard } from './Dashboard';\nimport { AddBook } from './AddBook';\nimport { EditBook } from './EditBook';\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/addbook\" component={AddBook}/>\n        <Route path=\"/editbook\" component={EditBook}/>\n        \n        <Redirect path=\"/home\" to=\"/\" />\n      </Switch>\n\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}