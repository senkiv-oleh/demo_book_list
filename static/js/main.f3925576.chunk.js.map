{"version":3,"sources":["Header/Header.jsx","Book/Book.jsx","api/api.js","api/books.js","BooksTable/BooksTable.jsx","Dashboard/Dashboard.jsx","Errors/Errors.jsx","BookForm/BookForm.jsx","api/category.js","App.jsx","index.jsx"],"names":["Header","_jsxs","className","children","_jsx","NavLink","to","exact","activeClassName","Book","_ref","book","onBookDeleted","title","author","category","isbn","Link","concat","id","type","onClick","request","url","options","fetch","then","res","json","getBookDelete","bookId","remove","method","addBook","post","headers","body","JSON","stringify","updateCurrentBook","put","BooksTable","books","setBooks","useState","useEffect","removeBook","carrentList","filter","_Fragment","map","Dashboard","Errors","errors","console","log","Object","values","error","BookForm","match","categoties","setCategories","errorVisible","setErrorVisible","setBook","params","history","useHistory","getBook","data","saveBook","redirect","useMemo","validateForm","newErrors","emptyTitle","emptyAuthor","numberInAuthor","noCategory","emptyISBN","lettersInISBN","lengthISBN","name","length","countError","count","key","handleChange","event","preventDefault","value","target","current","replace","onSubmit","placeholder","onChange","hidden","selected","App","Switch","Route","path","component","Redirect","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.f3925576.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'bulma';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/book\"\n      exact\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n    >\n      Dashboard\n    </NavLink>\n    <NavLink\n      to=\"/addbook\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\">\n      Add a Book\n    </NavLink>\n  </nav>\n);\n","import PropTypes from 'prop-types';\nimport {  Link } from 'react-router-dom';\n\nimport 'bulma';\nimport './Book.scss';\n\nexport const Book = ({ book, onBookDeleted }) => {\n\n\n  return <tr className=\"Book\" key={book.id}>\n    <td>{book.title}</td>\n    <td>{book.author}</td>\n    <td>{book.category}</td>\n    <td>{book.isbn}</td>\n    <td>\n      <Link \n        className=\"Book__button button button--edit\"\n        to={`/book/${book.id}`}\n      > \n        EDIT\n      </Link>\n      <button\n        type=\"button\"\n        className=\"Book__button button button--delete\"\n        onClick ={() => {\n          onBookDeleted(book.id)\n        }}\n      >\n        DELETE\n      </button>\n    </td>\n  </tr>\n\n}\n\n          \n  \n\nBook.propTypes = {\n  book: PropTypes.object.isRequired,\n};\n","const BASE_URL = 'https://books-database-36ba8aef5296.herokuapp.com';\n\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json());\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const post = (url, book) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(book),\n});\n\nexport const put = (url, {title, author, category, isbn}) => request(url, {\n  method: 'PUT',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({title, author, category, isbn}),\n});\n","import { request, remove, post, put } from './api';\n\nexport const getBooks = () => request(`/books`);\n\nexport const getBook = (bookId) => request(`/books/${bookId}`);\n\n\nexport const getBookDelete = bookId => remove(`/books/${bookId}`);\n\nexport function addBook(book) {\n  return post(`/books`, book);\n}\n\nexport const updateCurrentBook= ({ id, title, author, category, isbn }) => put(`/books/${id}`, {title, author, category, isbn})\n","import React, { useState, useEffect } from 'react';\n\nimport { Book } from '../Book';\nimport {getBooks, getBookDelete} from '../api/books';\n\nimport 'bulma';\nimport './BooksTable.scss';\n\nexport const BooksTable = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    getBooks()\n      .then(res => setBooks([...res]));\n  }, [books]);\n\n  const removeBook = (bookId) => {\n    getBookDelete(bookId)\n      .then(() => {\n        setBooks(carrentList => (\n          carrentList.filter(books => books.id !== bookId)\n        ))\n      })\n  }\n\n  return (\n    <>\n      <table className=\"BooksTable table  is-striped is-narrow is-hoverable\">\n        <thead>\n          <tr>\n            <th className=\"BooksTable__title\">Title</th>\n            <th className=\"BooksTable__title\">Author</th>\n            <th className=\"BooksTable__title\">Category</th>\n            <th className=\"BooksTable__title\">ISBN</th>\n            <th className=\"BooksTable__title\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {books.map(book =>\n            <Book book={book} books={books} onBookDeleted={removeBook} key={book.id} />\n          )}\n        </tbody>\n      </table>\n    </>\n\n  );\n};\n\n","import React from 'react';\n\nimport { BooksTable } from '../BooksTable'\nimport './Dashboard.scss';\n\n\nexport const Dashboard = () =>\n  <>\n    <h1 className=\"Dashboard__title title\">Books Table</h1>\n    <BooksTable />\n  </>\n\n\n","import React from 'react';\n\nimport 'bulma';\nimport './Errors.scss';\n\nexport const Errors = ({ errors }) => {\n  console.log(errors);\n  return (\n    <div className=\"Errors\">\n      {\n        Object.values(errors).map(error =>\n          <p>\n            {error}\n          </p>\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bulma';\nimport './BookForm.scss';\n\nimport { getCategories } from '../api/category'\nimport { updateCurrentBook, getBook, addBook } from '../api/books'\nimport { Errors } from '../Errors'\n\nexport const BookForm = ({ match }) => {\n  const [categoties, setCategories] = useState([]);\n  const [errorVisible, setErrorVisible] = useState(false)\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    category: '',\n    isbn: '',\n  });\n\n  const bookId = match.params.bookId;\n  const history = useHistory();\n\n  useEffect(() => {\n    getBook(bookId)\n      .then(data => setBook({ ...data }));\n    getCategories()\n      .then(data => setCategories(data));\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setErrorVisible(true);\n    if (countError() === 0) {\n      saveBook(book);\n    }\n  }\n\n  const saveBook = (book) => {\n    if (bookId) {\n      updateCurrentBook(book);\n    } else {\n      addBook(book);\n    }\n    redirect();\n  };\n\n  const validateForm = () => {\n    const newErrors = {\n      emptyTitle: !book.title ? 'The book title field cannot be blank' : '',\n      emptyAuthor: !book.author ? 'The book author field cannot be blank' : '',\n      numberInAuthor: '',\n      noCategory: !book.category ? 'Book category not selected' : '',\n      emptyISBN: !book.isbn ? 'The book ISBN field cannot be blank' : '',\n      lettersInISBN: '',\n      lengthISBN: '',\n    };\n    console.log(book.title);\n    for (let name in book) {\n      switch (name) {\n        case 'title': newErrors.emptyTitle = book[name] === '' ? `The book title field cannot be blank` : '';\n          break;\n        case 'author':\n          newErrors.emptyAuthor = book[name] === '' ? `The book author field cannot be blank` : '';\n          newErrors.numberInAuthor = book[name].match(/\\d+/g) ? `The book author cannot contain numbers` : '';\n          break;\n        case 'category':\n          newErrors.noCategory = book[name] === '' ? `Book category not selected` : '';\n          break;\n        case 'isbn':\n          newErrors.emptyISBN = book[name] === '' ? `The book ISBN field cannot be blank` : '';\n          newErrors.lettersInISBN = book[name].match(/[a-zA-Z]/g) ? `The book ISBN cannot contain letters` : '';\n          newErrors.lengthISBN = book[name].length === 13 ? '' : `The book ISBN field must contain 13 digits`;\n          break;\n\n        default:\n          break;\n      }\n    }\n    return newErrors;\n  }\n\n  const errors = useMemo(validateForm, [book])\n\n  const countError = () => {\n    let count = 0;\n    for (const key in errors) {\n      if (errors[key].length > 0) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setBook((current) => ({ ...current, [name]: value }));\n  }\n\n  const redirect = () => {\n    history.replace('/book')\n  }\n\n  return (\n    <div className=\"BookForm\">\n      <form\n        className=\"BookForm__form \"\n        onSubmit={onSubmit}\n      >\n        <input\n          className=\"input is-small field is-grouped-centered\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title of book\"\n          value={book.title}\n          onChange={handleChange}\n        />\n        <input\n          className=\"input is-small field\"\n          name=\"author\"\n          type=\"text\"\n          placeholder=\"Author of book\"\n          value={book.author}\n          onChange={handleChange}\n\n        />\n        <select\n          name=\"category\"\n          id=\"category\"\n          className=\"BookForm__select select is-small field\"\n          onChange={handleChange}\n          value={book.category}\n        >\n          <option\n            value=\"0\"\n            hidden\n            selected\n          >\n            Select category of book\n          </option>\n          {categoties.map(category => (\n            <option\n              value={category.name}\n              key={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          className=\"input is-small field\"\n          name=\"isbn\"\n          type=\"text\"\n          placeholder=\"ISBN of book\"\n          value={book.isbn}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"BookForm__button button\"\n        >\n          Save\n        </button>\n      </form>\n      <div className=\"BookForm__errors errors\">\n        {errorVisible && <Errors errors={errors} />}\n      </div>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getCategories = () => request(`/categories`);\n\nexport const getCategory = (categoryId) => request(`/categories/${categoryId}`);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './Header';\nimport { Dashboard } from './Dashboard';\nimport { BookForm } from './BookForm';\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/book\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/addbook\" component={BookForm}/>\n        <Route exact path=\"/book/:bookId\" component={BookForm}/>\n        \n        <Redirect path=\"/\" to=\"/book\" />\n      </Switch>\n\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}