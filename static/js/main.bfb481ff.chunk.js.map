{"version":3,"sources":["Header/Header.jsx","Book/Book.jsx","api/api.js","api/books.js","BooksTable/BooksTable.jsx","Dashboard/Dashboard.jsx","Errors/Errors.jsx","BookForm/BookForm.jsx","api/category.js","App.jsx","index.jsx"],"names":["Header","className","to","exact","activeClassName","Book","book","onBookDeleted","title","author","category","isbn","id","type","onClick","request","url","options","fetch","then","res","json","getBookDelete","bookId","method","addBook","headers","body","JSON","stringify","post","updateCurrentBook","put","BooksTable","useState","books","setBooks","useEffect","removeBook","carrentList","filter","map","Dashboard","Errors","errors","console","log","Object","values","error","BookForm","match","categoties","setCategories","errorVisible","setErrorVisible","setBook","params","history","useHistory","getBook","data","saveBook","redirect","useMemo","newErrors","emptyTitle","emptyAuthor","numberInAuthor","noCategory","emptyISBN","lettersInISBN","lengthISBN","name","length","countError","count","key","handleChange","event","preventDefault","target","value","current","replace","onSubmit","action","classNames","placeholder","onChange","hidden","selected","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfb481ff.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'bulma';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/book\"\n      exact\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n    >\n      Dashboard\n    </NavLink>\n    <NavLink\n      to=\"/addbook\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\">\n      Add a Book\n    </NavLink>\n  </nav>\n);\n","import PropTypes from 'prop-types';\nimport {  Link } from 'react-router-dom';\n\nimport 'bulma';\nimport './Book.scss';\n\nexport const Book = ({ book, onBookDeleted }) => {\n\n\n  return <tr className=\"Book\" key={book.id}>\n    <td>{book.title}</td>\n    <td>{book.author}</td>\n    <td>{book.category}</td>\n    <td>{book.isbn}</td>\n    <td>\n      <Link \n        className=\"Book__button button button--edit\"\n        to={`/book/${book.id}`}\n      > \n        EDIT\n      </Link>\n      <button\n        type=\"button\"\n        className=\"Book__button button button--delete\"\n        onClick ={() => {\n          onBookDeleted(book.id)\n        }}\n      >\n        DELETE\n      </button>\n    </td>\n  </tr>\n\n}\n\n          \n  \n\nBook.propTypes = {\n  book: PropTypes.arrayOf().isRequired,\n};\n"," const BASE_URL = 'https://books-data-base.herokuapp.com';\n\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json());\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const post = (url, book) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(book),\n});\n\nexport const put = (url, {title, author, category, isbn}) => request(url, {\n  method: 'PUT',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({title, author, category, isbn}),\n});\n","import { request, remove, post, put } from './api';\n\nexport const getBooks = () => request(`/books`);\n\nexport const getBook = (bookId) => request(`/books/${bookId}`);\n\n\nexport const getBookDelete = bookId => remove(`/books/${bookId}`);\n\nexport function addBook(book) {\n  return post(`/books`, book);\n}\n\nexport const updateCurrentBook= ({ id, title, author, category, isbn }) => put(`/books/${id}`, {title, author, category, isbn})\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Book } from '../Book';\nimport { getBooks, getBookDelete } from '../api/books';\n\nimport 'bulma';\nimport './BooksTable.scss';\n\nexport const BooksTable = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    getBooks()\n      .then(res => setBooks(res));\n  }, [books]);\n\n  const removeBook = (bookId) => {\n    getBookDelete(bookId)\n      .then(() => {\n        setBooks(carrentList => (\n          carrentList.filter(books => books.id !== bookId)\n        ))\n      })\n  }\n\n  return (\n    <>\n      <table className=\"BooksTable table  is-striped is-narrow is-hoverable\">\n        <thead>\n          <tr>\n            <th className=\"BooksTable__title\">Title</th>\n            <th className=\"BooksTable__title\">Author</th>\n            <th className=\"BooksTable__title\">Category</th>\n            <th className=\"BooksTable__title\">ISBN</th>\n            <th className=\"BooksTable__title\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {books.map(book => <Book book={book} books={books} onBookDeleted={removeBook} key={book.id} />)}\n        </tbody>\n      </table>\n    </>\n\n  );\n};\n\n","import React from 'react';\n\nimport { BooksTable } from '../BooksTable'\nimport './Dashboard.scss';\n\n\nexport const Dashboard = () =>\n  <>\n    <h1 className=\"Dashboard__title title\">Books Table</h1>\n    <BooksTable />\n  </>\n\n\n","import React from 'react';\n\nimport 'bulma';\nimport './Errors.scss';\n\nexport const Errors = ({ errors }) => {\n  console.log(errors);\n  return (\n    <div className=\"Errors\">\n      {\n        Object.values(errors).map(error =>\n          <p>\n            {error}\n          </p>\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bulma';\nimport './BookForm.scss';\n\nimport { getCategories } from '../api/category'\nimport { updateCurrentBook, getBook, addBook } from '../api/books'\nimport { Errors } from '../Errors'\n\nexport const BookForm = ({ match }) => {\n\n  const [categoties, setCategories] = useState([]);\n  const [errorVisible, setErrorVisible] = useState(false)\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    category: '',\n    isbn: '',\n  })\n\n  const bookId = match.params.bookId;\n  const history = useHistory();\n\n  useEffect(() => {\n    getBook(bookId)\n      .then(data => setBook({ ...data }));\n    getCategories()\n      .then(data => setCategories(data));\n      \n  }, [bookId]);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setErrorVisible(true);\n\n    if (countError() === 0) {\n      saveBook(book);\n    }\n  }\n\n  const saveBook = (book) => {\n    if (bookId) {\n      updateCurrentBook(book);\n    } else {\n      addBook(book);\n    }   \n     redirect();\n  };\n\n  const validateForm = () => {\n    const newErrors = {\n      emptyTitle: '',\n      emptyAuthor: '',\n      numberInAuthor: '',\n      noCategory: '',\n      emptyISBN: '',\n      lettersInISBN: '',\n      lengthISBN: '',\n    };\n\n    for (let name in book) {\n      switch (name) {\n        case 'title': newErrors.emptyTitle = book[name].length === 0 ? `The book title field cannot be blank` : '';\n          break;\n        case 'author':\n          newErrors.emptyAuthor = book[name] === '' ? `The book author field cannot be blank` : '';\n          newErrors.numberInAuthor = book[name].match(/\\d+/g) ? `The book author cannot contain numbers` : '';\n          break;\n        case 'category':\n          newErrors.noCategory = book[name] === '' ? `Select book category` : '';\n          break;\n        case 'isbn':\n          newErrors.emptyISBN = book[name] === '' ? `The book ISBN field cannot be blank` : '';\n          newErrors.lettersInISBN = book[name].match(/[a-zA-Z]/g) ? `The book ISBN cannot contain letters` : '';\n          newErrors.lengthISBN = book[name].length === 13 ? '' : `The book ISBN field must contain 13 digits`;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return newErrors;\n  }\n\n  const errors = useMemo(validateForm, [book]);\n\n  const countError = () => {\n    let count = 0;\n    for (const key in errors) {\n      if (errors[key].length > 0) {\n        count++;\n      }\n    }\n    return count;\n  }\n  const handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    setBook((current) => ({ ...current, [name]: value }));\n  }\n\n  const redirect = () => {\n    history.replace('/book')\n  }\n\n  return (\n    <div className=\"BookForm\">\n      <form\n        className=\"BookForm__form \"\n        onSubmit={onSubmit}\n        action=\"/book\"\n      >\n        <input\n          className={classNames('input is-small field is-grouped-centered', { 'is-error': errors.emptyTitle !== '' })}\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title of book\"\n          value={book.title}\n          onChange={handleChange}\n        />\n        <input\n          className=\"input is-small field\"\n          name=\"author\"\n          type=\"text\"\n          placeholder=\"Author of book\"\n          value={book.author}\n          onChange={handleChange}\n        />\n        <select\n          name=\"category\"\n          id=\"category\"\n          className=\"BookForm__select select is-small field\"\n          onChange={handleChange}\n          value={book.category}\n\n        >\n          <option\n            value=\"0\"\n            hidden\n            selected\n          >\n            Select category of book\n          </option>\n          {categoties.map(category => (\n            <option\n              value={category.name}\n              key={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          className=\"input is-small field\"\n          name=\"isbn\"\n          type=\"text\"\n          placeholder=\"ISBN of book\"\n          value={book.isbn}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"BookForm__button button\"\n        >\n          Save\n        </button>\n      </form>\n      <div className=\"BookForm__errors errors\">\n        {errorVisible && <Errors errors={errors} />}\n      </div>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getCategories = () => request(`/categories`);\n\nexport const getCategory = (categoryId) => request(`/categories/${categoryId}`);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Header } from './Header';\nimport { Dashboard } from './Dashboard';\nimport { BookForm } from './BookForm';\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/book\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/addbook\" component={BookForm}/>\n        <Route exact path=\"/book/:bookId\" component={BookForm}/>\n        \n        <Redirect path=\"/\" to=\"/book\" />\n      </Switch>\n\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}