{"version":3,"sources":["Header/Header.jsx","Book/Book.jsx","api/api.js","api/books.js","BooksTable/BooksTable.jsx","Dashboard/Dashboard.jsx","Errors/Errors.jsx","BookForm/BookForm.jsx","api/category.js","App.jsx","index.jsx"],"names":["Header","className","to","exact","activeClassName","Book","book","onBookDeleted","console","log","title","author","category","isbn","id","type","onClick","request","url","options","fetch","then","res","json","getBookDelete","bookId","method","addBook","headers","body","JSON","stringify","updateCurrentBook","put","BooksTable","useState","books","setBooks","useEffect","removeBook","carrentList","filter","map","Dashboard","Errors","errors","Object","values","error","index","BookForm","match","categoties","setCategories","errorVisible","setErrorVisible","setBook","params","useHistory","getBook","data","saveBook","setTimeout","redirect","useMemo","newErrors","emptyTitle","emptyAuthor","numberInAuthor","noCategory","emptyISBN","lettersInISBN","lengthISBN","name","length","countError","count","key","handleChange","event","target","value","current","window","open","onSubmit","preventDefault","placeholder","onChange","hidden","selected","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6640f48b.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'bulma';\nimport {NavLink} from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/book\"\n      exact\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n    >\n      Dashboard\n    </NavLink>\n    <NavLink\n      to=\"/addbook\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\">\n      Add a Book\n    </NavLink>\n  </nav>\n);\n","import PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\nimport 'bulma';\r\nimport './Book.scss';\r\n\r\nexport const Book = ({book, onBookDeleted}) => {\r\n\r\n  console.log(\"book = \", book)\r\n  return (\r\n    <tr className=\"Book\" key={book.id}>\r\n      <td>{book.title}</td>\r\n      <td>{book.author}</td>\r\n      <td>{book.category}</td>\r\n      <td>{book.isbn}</td>\r\n      <td>\r\n        <Link\r\n          className=\"Book__button button button--edit\" to={`/book/${book.id}`}\r\n        >\r\n          EDIT\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          className=\"Book__button button button--delete\"\r\n          onClick={() => {\r\n            onBookDeleted(book.id);\r\n          }}\r\n        >\r\n          DELETE\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.shape().isRequired,\r\n};\r\n","const BASE_URL = 'https://671cab0609103098807ac8fc.mockapi.io';\r\n\r\n\r\nexport const request = (url, options) => {\r\n  console.log(url);\r\n  return fetch(`${BASE_URL}${url}`, options)\r\n      .then((res) => res.json());\r\n};\r\n\r\nexport const remove = (url) => request(url, {\r\n  method: 'DELETE',\r\n});\r\n\r\nexport const post = (url, book) => request(url, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-type': 'application/json; charset=UTF-8',\r\n  },\r\n  body: JSON.stringify(book),\r\n});\r\n\r\nexport const put = (url, {\r\n  title,\r\n  author,\r\n  category,\r\n  isbn,\r\n}) => request(url, {\r\n  method: 'PUT',\r\n  headers: {\r\n    'Content-type': 'application/json; charset=UTF-8',\r\n  },\r\n  body: JSON.stringify({\r\n    title,\r\n    author,\r\n    category,\r\n    isbn,\r\n  }),\r\n});\r\n","import {\n  request,\n  remove,\n  post,\n  put,\n} from './api';\n\nexport const getBooks = () => request(`/books`);\n\nexport const getBook = (bookId) => request(`/books/${bookId}`);\n\n\nexport const getBookDelete = (bookId) => remove(`/books/${bookId}`);\n\nexport const addBook = ({\n  id,\n  title,\n  author,\n  category,\n  isbn,\n}) => post(`/books`, {\n  id,\n  title,\n  author,\n  category,\n  isbn,\n});\n\nexport const updateCurrentBook = ({\n  id,\n  title,\n  author,\n  category,\n  isbn,\n}) => put(`/books/${id}`, {\n  title,\n  author,\n  category,\n  isbn,\n});","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Book} from '../Book';\r\n\r\nimport {getBooks, getBookDelete} from '../api/books';\r\n\r\nimport 'bulma';\r\nimport './BooksTable.scss';\r\n\r\nexport const BooksTable = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getBooks()\r\n        .then((res) => setBooks(res));\r\n  }, []);\r\n\r\n  const removeBook = (bookId) => {\r\n    getBookDelete(bookId)\r\n        .then(() => {\r\n          setBooks((carrentList) => (\r\n            carrentList.filter((books) => books.id !== bookId)\r\n          ));\r\n        });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table className=\"BooksTable table  is-striped is-narrow is-hoverable\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"BooksTable__title\">Title</th>\r\n            <th className=\"BooksTable__title\">Author</th>\r\n            <th className=\"BooksTable__title\">Category</th>\r\n            <th className=\"BooksTable__title\">ISBN</th>\r\n            <th className=\"BooksTable__title\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {books.map((book) =>\r\n            <Book\r\n              book={book}\r\n              books={books}\r\n              onBookDeleted={removeBook}\r\n              key={book.id}\r\n            />)}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nBooksTable.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    isbn: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n","import React from 'react';\n\nimport {BooksTable} from '../BooksTable';\nimport './Dashboard.scss';\n\n\nexport const Dashboard = () =>\n  <>\n    <h1 className=\"Dashboard__title title\">Books Table</h1>\n    <BooksTable />\n  </>;\n","import React from 'react';\nimport 'bulma';\nimport './Errors.scss';\n\nexport const Errors = ({errors}) => {\n  console.log(errors);\n  return (\n    <div className=\"Errors\">\n      {\n        Object.values(errors).map((error, index) =>\n          <p key={index + error}>{error}</p>,\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport 'bulma';\nimport './BookForm.scss';\n\nimport { getCategories } from '../api/category';\nimport { updateCurrentBook, getBook, addBook } from '../api/books';\nimport { Errors } from '../Errors';\n\nexport const BookForm = ({ match }) => {\n  const [categoties, setCategories] = useState([]);\n  const [errorVisible, setErrorVisible] = useState(false);\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    category: '',\n    isbn: '',\n  });\n\n  const bookId = match.params.bookId;\n  const history = useHistory();\n\n  useEffect(() => {\n    getBook(bookId)\n      .then((data) => setBook({ ...data }));\n    getCategories()\n      .then((data) => setCategories(data));\n  }, []);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (countError() === 0) {\n      saveBook(book);\n    } else {\n      setErrorVisible(true);\n    }\n  };\n\n  const saveBook = (book) => {\n    if (bookId) {\n      updateCurrentBook(book);\n    } else {\n      addBook(book);\n    }\n    setTimeout(() => redirect(), 1000);\n  };\n\n  const validateForm = () => {\n    const newErrors = {\n      emptyTitle: !book.title ? 'The book title field cannot be blank' : '',\n      emptyAuthor: !book.author ? 'The book author field cannot be blank' : '',\n      numberInAuthor: '',\n      noCategory: !book.category ? 'Book category not selected' : '',\n      emptyISBN: !book.isbn ? 'The book ISBN field cannot be blank' : '',\n      lettersInISBN: '',\n      lengthISBN: '',\n    };\n\n    for (const name in book) {\n      switch (name) {\n        case 'title': newErrors.emptyTitle = book[name] === '' ?\n          `The book title field cannot be blank` :\n          '';\n          break;\n        case 'author':\n          newErrors.emptyAuthor = book[name] === '' ? `The book author field cannot be blank` : '';\n          newErrors.numberInAuthor = book[name].match(/\\d+/g) ? `The book author cannot contain numbers` : '';\n          break;\n        case 'category':\n          newErrors.noCategory = book[name] === '' ? `Book category not selected` : '';\n          break;\n        case 'isbn':\n          newErrors.emptyISBN = book[name] === '' ? `The book ISBN field cannot be blank` : '';\n          newErrors.lettersInISBN = book[name].match(/\\D/g) ? `The ISBN cannot contain letters` : '';\n          newErrors.lengthISBN = book[name].length === 13\n            ? ''\n            : `The book ISBN field must contain 13 digits`;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return newErrors;\n  };\n\n  const errors = useMemo(validateForm, [book]);\n\n  const countError = () => {\n    let count = 0;\n\n    for (const key in errors) {\n      if (errors[key].length > 0) {\n        count++;\n      }\n    }\n\n    return count;\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setBook((current) => ({ ...current, [name]: value }));\n  };\n\n  const redirect = () => {\n    window.open('/react-test-task', '_self');\n  };\n\n  return (\n    <div className=\"BookForm\">\n      <form\n        className=\"BookForm__form \"\n        onSubmit={onSubmit}\n      >\n        <input\n          className=\"input is-small field is-grouped-centered\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title of book\"\n          value={book.title}\n          onChange={handleChange}\n        />\n        <input\n          className=\"input is-small field\"\n          name=\"author\"\n          type=\"text\"\n          placeholder=\"Author of book\"\n          value={book.author}\n          onChange={handleChange}\n        />\n        <select\n          name=\"category\"\n          id=\"category\"\n          className=\"BookForm__select select is-small field\"\n          onChange={handleChange}\n          value={book.category}\n        >\n          <option\n            value=\"0\"\n            hidden\n            selected\n          >\n            Select category of book\n          </option>\n          {categoties.map((category) => (\n            <option\n              value={category.name}\n              key={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          className=\"input is-small field\"\n          name=\"isbn\"\n          type=\"text\"\n          placeholder=\"ISBN of book\"\n          value={book.isbn}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"BookForm__button button\"\n        >\n          Save\n        </button>\n      </form>\n      <div className=\"BookForm__errors errors\">\n        {errorVisible && <Errors errors={errors} />}\n      </div>\n    </div>\n  );\n};\n","import {\n  request,\n} from './api';\n\nexport const getCategories = () => request(`/categories`);\n\nexport const getCategory = (categoryId) => request(`/categories/${categoryId}`);\n","import React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Header} from './Header';\nimport {Dashboard} from './Dashboard';\nimport {BookForm} from './BookForm';\nimport './App.scss';\n\nconst App = () => (\n  <>\n    <Header />\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/book\" component={() => <Dashboard />} />\n        <Route path=\"/addbook\" component={BookForm} />\n        <Route exact path=\"/book/:bookId\" component={BookForm} />\n\n        <Redirect path=\"/\" to=\"/book\" />\n      </Switch>\n\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}